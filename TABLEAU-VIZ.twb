<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.1008.1759                               -->
<workbook original-version='10.5' source-build='10.5.9 (10500.18.1008.1759)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='parkingAltered' inline='true' name='federated.0zopczd02d3z9a19ye0u60ifz2gl' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='parkingAltered' name='textscan.19yg74g0ck8ewv10ejqpg19slovh'>
            <connection class='textscan' directory='E:/CSCI4502' filename='parkingAltered.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.19yg74g0ck8ewv10ejqpg19slovh' name='parkingAltered.csv' table='[parkingAltered#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='Plate Type' ordinal='2' />
            <column datatype='integer' name='ViolCode' ordinal='3' />
            <column datatype='string' name='Vehicle Body Type' ordinal='4' />
            <column datatype='string' name='Make' ordinal='5' />
            <column datatype='integer' name='Street Code1' ordinal='6' />
            <column datatype='integer' name='Street Code2' ordinal='7' />
            <column datatype='integer' name='Street Code3' ordinal='8' />
            <column datatype='string' name='Violation Time' ordinal='9' />
            <column datatype='string' name='Street' ordinal='10' />
            <column datatype='string' name='Color' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[parkingAltered.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[parkingAltered.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[parkingAltered.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plate Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Plate Type]</local-name>
            <parent-name>[parkingAltered.csv]</parent-name>
            <remote-alias>Plate Type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ViolCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ViolCode]</local-name>
            <parent-name>[parkingAltered.csv]</parent-name>
            <remote-alias>ViolCode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Body Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Vehicle Body Type]</local-name>
            <parent-name>[parkingAltered.csv]</parent-name>
            <remote-alias>Vehicle Body Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[parkingAltered.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street Code1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Street Code1]</local-name>
            <parent-name>[parkingAltered.csv]</parent-name>
            <remote-alias>Street Code1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street Code2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Street Code2]</local-name>
            <parent-name>[parkingAltered.csv]</parent-name>
            <remote-alias>Street Code2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street Code3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Street Code3]</local-name>
            <parent-name>[parkingAltered.csv]</parent-name>
            <remote-alias>Street Code3</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Violation Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Violation Time]</local-name>
            <parent-name>[parkingAltered.csv]</parent-name>
            <remote-alias>Violation Time</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Street]</local-name>
            <parent-name>[parkingAltered.csv]</parent-name>
            <remote-alias>Street</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Color</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Color]</local-name>
            <parent-name>[parkingAltered.csv]</parent-name>
            <remote-alias>Color</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Color]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Street Code1]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Street Code2]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Street Code3]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Vehicle Body Type]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Viol Code' datatype='integer' name='[ViolCode]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Violation Time]' role='dimension' type='nominal' />
      <column-instance column='[Color]' derivation='None' name='[none:Color:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Vehicle Body Type]' derivation='None' name='[none:Vehicle Body Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Violation Time]' derivation='None' name='[none:Violation Time:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (State,Vehicle Body Type)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State:nk]' />
          <groupfilter function='level-members' level='[none:Vehicle Body Type:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.584559' measure-ordering='alphabetic' measure-percentage='0.415441' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Violation Time:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;4105&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AFTERNOON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;09+4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;7115&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2733&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;9645&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4506&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4106&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MORNING&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2825&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;9745&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6602&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;092/&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;8956&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6153&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;4005&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;9835&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;4529&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5600&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6515&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;7113&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4157&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NIGHT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4038&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9843&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2603&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9452&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5915&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4444&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2702&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9600&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Color:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#000000'>
              <bucket>&quot;BLACK&quot;</bucket>
            </map>
            <map to='#0000ff'>
              <bucket>&quot;BLUE&quot;</bucket>
            </map>
            <map to='#00d900'>
              <bucket>&quot;GREEN&quot;</bucket>
            </map>
            <map to='#550000'>
              <bucket>&quot;BROWN&quot;</bucket>
            </map>
            <map to='#a1a1a1'>
              <bucket>&quot;GREY&quot;</bucket>
            </map>
            <map to='#f4f4f4'>
              <bucket>&quot;WHITE&quot;</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;RED&quot;</bucket>
            </map>
            <map to='#ffff00'>
              <bucket>&quot;YELLOW&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Vehicle Body Type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;2S&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;4WHE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BART&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BYS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;COMM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CV&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EII&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FREI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;H/IN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;III&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IVIS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LIRR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NTTR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PENS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PUMP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;REG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RYDE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SEM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SUVY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TF&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TOW&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TRIK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;UH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VAN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WINN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4DRS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CIMK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DODG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FODO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HUMM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;INTR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MORT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NLC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;P-U&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PLYM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;REF&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RLN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SIXS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;STEP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TAHO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TRAL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UTI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WAG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2DSD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4H&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AUDI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BUS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CRFI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DUMP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FPM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GOV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IAN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ISLL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LIM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MCY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MOTO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PASS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;REFI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RPLC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SEAC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SMC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SUBA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TAXI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TMST&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TRC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TWOW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UTL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3S&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5H&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BIKE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CALI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CONS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;F&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FRIE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HATC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IJIC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LMA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MINI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MTR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OMNI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PICK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RANG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;REUC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SAT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SEMT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SRF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SVY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TOYO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TRLE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UMO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VESP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WTRU&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2W&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4WY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BCK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;COMT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EMVR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FRER&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;H/TR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IIIN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IVL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LIVE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MPTO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OHIO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PERM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Q&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RENT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SEMG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SOUT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SUZU&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TFUC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TOWD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TRIL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UHAL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VANT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WORK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2DSE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4S&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AVO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BUSA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CNNI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CSS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DUMT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GREE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IANN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LIME&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MCYC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MOTR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PATH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PSD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;REFJ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RRM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SEDA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SMLR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SUBN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TRCK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UTLI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WGN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;4DOO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;APPT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BOAT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CHRY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COUP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DFLA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FLEE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HRSE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;INTE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MAST&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MOPD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NISU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OUTA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PLIM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RED&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SCOT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SILV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;STAT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TACI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TKRT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TRAI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TRUC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;URS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;YY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2 DR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;4DSD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ARMO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BU&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CMB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CPY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DOW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FORD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GMC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LGM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MCC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MOT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;P/SH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;POLE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;REFA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RLY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SDA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;STNW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TAK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TLC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TRAN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TTK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UTIC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WAGO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;4D S&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;APP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BMRR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CHAU&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COOP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DELV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FIVE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FRWE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HOND&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ILR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KIA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;M&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MOBL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PKUP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RDST&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SCL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;STAK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TJ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TRA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TRT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UNTI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;YOSD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2H&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;4T&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BUST&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CNZ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CUNV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DUNY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FRED&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GTY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ICMB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ISUZ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LIMO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MCYM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MOTV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NSIL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PCK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PSVA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;REFR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RRTN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SEDN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SN/P&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SUBU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TEMP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TNAC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TRCT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;UD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;UTR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;4 DR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;8V&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BLAC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CARR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CONT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DEER&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FB&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FRIG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HB&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IKPV&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JRLL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LONV&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ML&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MYC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OMR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PICL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RBM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SAVA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SEMY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SSS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SW&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TIAU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TRLR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UNC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VLEK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WW&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;4D&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AFOU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BLK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CONV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DEL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FEDE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FRLI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ILLS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KEAR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LTPI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MLCY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;N&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OMRB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PICS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RGG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SCEN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ST W&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SWT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TINS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TR/C&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TROC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UNI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Y&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;4DHT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;APPO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BMW&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CHER&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CORP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DEMA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FLAT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FUTR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HOPR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;L&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MACK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MONT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NIS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OUCJ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PLAT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;REBI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RIGG&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SCOO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SIIC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;STAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T/CR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TRAC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TRTR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UPS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VSRS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;YTAC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;4DR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;APUR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BOXT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CHTB&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COVN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FLTB&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GLE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HSLN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;INTL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LACO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MAZD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MOPE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;P&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PLU&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;REDY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RLL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SCRM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SING&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;STAW&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TACT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TKTR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TRAK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TRUK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W/DR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Z&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3C&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5D&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BCYC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;COMV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CYC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ESCA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FRG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;H/WH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IIN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JEEP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MIC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OML&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PETE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;R&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RER&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S/SP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SEMI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TGNI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TOWN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TRK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;UHAU&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WRAN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2L&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4W&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BACK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CUST&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DURA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FREG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;H&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;II&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ITIL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LINC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MOVI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NSR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PEDI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;REFS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SEIT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SNNL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SUV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TEOD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TNC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TRIC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UDRE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WHIT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2D S&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;4DSE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ARTW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BUDG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CMIX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CRAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FORU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GOBU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HWH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IRP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LGTR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MCFE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MOTC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NMZF&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;P/U&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;POUS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;REFE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RODE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SLRS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;STWA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TANK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TLR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TRAU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UTIL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WASH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;4D H&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AMBU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BLUE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHAR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CONY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DELI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FIAT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FRON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HINO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ILN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KERE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LTRL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MLIC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NHL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OMT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RD/S&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SCHO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SERN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;STAI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TIZU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TR/E&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TRSI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UNK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VOLK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;YDSD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;3D&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5DRS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BELL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CYCL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EXPL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FRHT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HARH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IINN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LLM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MILF&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MTC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OMMI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PIC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;R/RD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RERF&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SABL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SEMR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SPIN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SVU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TOWT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TRL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ULT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VEHR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WSR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2DHT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;4DY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ATV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BUP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CMX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CREW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DUCA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FOUR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GOU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;I&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LIFT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MCT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MOTE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NNJ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PAS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PRIU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;REFG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ROLL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SMAR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TARC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TLRL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TRAV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TWOD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UTIT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WASO&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Car Makes per state'>
      <table>
        <view>
          <datasources>
            <datasource caption='parkingAltered' name='federated.0zopczd02d3z9a19ye0u60ifz2gl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zopczd02d3z9a19ye0u60ifz2gl'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Vehicle Body Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Violation Time]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='Count' name='[cnt:State:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vehicle Body Type]' derivation='None' name='[none:Vehicle Body Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Violation Time]' derivation='None' name='[none:Violation Time:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Exclusions (State,Vehicle Body Type)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State:nk]' />
                <groupfilter function='level-members' level='[none:Vehicle Body Type:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                <groupfilter function='member' level='[none:Vehicle Body Type:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Vehicle Body Type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Vehicle Body Type:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Vehicle Body Type:nk]' member='%null%' />
                <groupfilter from='&quot;2 DR&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;2DHT&quot;' />
                <groupfilter from='&quot;2DSE&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;4DRS&quot;' />
                <groupfilter from='&quot;4DSE&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;DELI&quot;' />
                <groupfilter from='&quot;DEMA&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;PIC&quot;' />
                <groupfilter from='&quot;PICL&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;SDA&quot;' />
                <groupfilter from='&quot;SE&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;SUBA&quot;' />
                <groupfilter from='&quot;SUBU&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;VA&quot;' />
                <groupfilter from='&quot;VANT&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;Z&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Vehicle Body Type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2 DR&quot;</bucket>
              <bucket>&quot;2D S&quot;</bucket>
              <bucket>&quot;2DHT&quot;</bucket>
              <bucket>&quot;2DSD&quot;</bucket>
              <bucket>&quot;2DSE&quot;</bucket>
              <bucket>&quot;2H&quot;</bucket>
              <bucket>&quot;2L&quot;</bucket>
              <bucket>&quot;2S&quot;</bucket>
              <bucket>&quot;2W&quot;</bucket>
              <bucket>&quot;3C&quot;</bucket>
              <bucket>&quot;3D&quot;</bucket>
              <bucket>&quot;3S&quot;</bucket>
              <bucket>&quot;4 DR&quot;</bucket>
              <bucket>&quot;4D&quot;</bucket>
              <bucket>&quot;4D H&quot;</bucket>
              <bucket>&quot;4D S&quot;</bucket>
              <bucket>&quot;4DHT&quot;</bucket>
              <bucket>&quot;4DOO&quot;</bucket>
              <bucket>&quot;4DR&quot;</bucket>
              <bucket>&quot;4DRS&quot;</bucket>
              <bucket>&quot;4DSD&quot;</bucket>
              <bucket>&quot;4DSE&quot;</bucket>
              <bucket>&quot;4DY&quot;</bucket>
              <bucket>&quot;4H&quot;</bucket>
              <bucket>&quot;4S&quot;</bucket>
              <bucket>&quot;4T&quot;</bucket>
              <bucket>&quot;4W&quot;</bucket>
              <bucket>&quot;4WHE&quot;</bucket>
              <bucket>&quot;4WY&quot;</bucket>
              <bucket>&quot;5D&quot;</bucket>
              <bucket>&quot;5DRS&quot;</bucket>
              <bucket>&quot;5H&quot;</bucket>
              <bucket>&quot;8V&quot;</bucket>
              <bucket>&quot;AFOU&quot;</bucket>
              <bucket>&quot;AMBU&quot;</bucket>
              <bucket>&quot;APP&quot;</bucket>
              <bucket>&quot;APPO&quot;</bucket>
              <bucket>&quot;APPT&quot;</bucket>
              <bucket>&quot;APUR&quot;</bucket>
              <bucket>&quot;AR&quot;</bucket>
              <bucket>&quot;ARMO&quot;</bucket>
              <bucket>&quot;ARTW&quot;</bucket>
              <bucket>&quot;ATV&quot;</bucket>
              <bucket>&quot;AUDI&quot;</bucket>
              <bucket>&quot;AVO&quot;</bucket>
              <bucket>&quot;B&quot;</bucket>
              <bucket>&quot;BACK&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;BCK&quot;</bucket>
              <bucket>&quot;BCYC&quot;</bucket>
              <bucket>&quot;BELL&quot;</bucket>
              <bucket>&quot;BIKE&quot;</bucket>
              <bucket>&quot;BLAC&quot;</bucket>
              <bucket>&quot;BLK&quot;</bucket>
              <bucket>&quot;BLUE&quot;</bucket>
              <bucket>&quot;BMRR&quot;</bucket>
              <bucket>&quot;BMW&quot;</bucket>
              <bucket>&quot;BOAT&quot;</bucket>
              <bucket>&quot;BOXT&quot;</bucket>
              <bucket>&quot;BR&quot;</bucket>
              <bucket>&quot;BU&quot;</bucket>
              <bucket>&quot;BUDG&quot;</bucket>
              <bucket>&quot;BUP&quot;</bucket>
              <bucket>&quot;BUS&quot;</bucket>
              <bucket>&quot;BUSA&quot;</bucket>
              <bucket>&quot;BUST&quot;</bucket>
              <bucket>&quot;BW&quot;</bucket>
              <bucket>&quot;BYS&quot;</bucket>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;C4&quot;</bucket>
              <bucket>&quot;CA&quot;</bucket>
              <bucket>&quot;CALI&quot;</bucket>
              <bucket>&quot;CARR&quot;</bucket>
              <bucket>&quot;CB&quot;</bucket>
              <bucket>&quot;CHAR&quot;</bucket>
              <bucket>&quot;CHAU&quot;</bucket>
              <bucket>&quot;CHER&quot;</bucket>
              <bucket>&quot;CHRY&quot;</bucket>
              <bucket>&quot;CHTB&quot;</bucket>
              <bucket>&quot;CIMK&quot;</bucket>
              <bucket>&quot;CMB&quot;</bucket>
              <bucket>&quot;CMIX&quot;</bucket>
              <bucket>&quot;CMX&quot;</bucket>
              <bucket>&quot;CN&quot;</bucket>
              <bucket>&quot;CNNI&quot;</bucket>
              <bucket>&quot;CNZ&quot;</bucket>
              <bucket>&quot;COM&quot;</bucket>
              <bucket>&quot;COMM&quot;</bucket>
              <bucket>&quot;COMT&quot;</bucket>
              <bucket>&quot;COMV&quot;</bucket>
              <bucket>&quot;CON&quot;</bucket>
              <bucket>&quot;CONS&quot;</bucket>
              <bucket>&quot;CONT&quot;</bucket>
              <bucket>&quot;CONV&quot;</bucket>
              <bucket>&quot;CONY&quot;</bucket>
              <bucket>&quot;COOP&quot;</bucket>
              <bucket>&quot;CORP&quot;</bucket>
              <bucket>&quot;COUP&quot;</bucket>
              <bucket>&quot;COVN&quot;</bucket>
              <bucket>&quot;CP&quot;</bucket>
              <bucket>&quot;CPY&quot;</bucket>
              <bucket>&quot;CRAN&quot;</bucket>
              <bucket>&quot;CREW&quot;</bucket>
              <bucket>&quot;CRFI&quot;</bucket>
              <bucket>&quot;CSS&quot;</bucket>
              <bucket>&quot;CUNV&quot;</bucket>
              <bucket>&quot;CUST&quot;</bucket>
              <bucket>&quot;CV&quot;</bucket>
              <bucket>&quot;CW&quot;</bucket>
              <bucket>&quot;CYC&quot;</bucket>
              <bucket>&quot;CYCL&quot;</bucket>
              <bucket>&quot;DE&quot;</bucket>
              <bucket>&quot;DEER&quot;</bucket>
              <bucket>&quot;DEL&quot;</bucket>
              <bucket>&quot;DELI&quot;</bucket>
              <bucket>&quot;DELV&quot;</bucket>
              <bucket>&quot;DEMA&quot;</bucket>
              <bucket>&quot;DFLA&quot;</bucket>
              <bucket>&quot;DI&quot;</bucket>
              <bucket>&quot;DODG&quot;</bucket>
              <bucket>&quot;DOW&quot;</bucket>
              <bucket>&quot;DP&quot;</bucket>
              <bucket>&quot;DUCA&quot;</bucket>
              <bucket>&quot;DUMP&quot;</bucket>
              <bucket>&quot;DUMT&quot;</bucket>
              <bucket>&quot;DUNY&quot;</bucket>
              <bucket>&quot;DURA&quot;</bucket>
              <bucket>&quot;EII&quot;</bucket>
              <bucket>&quot;EMVR&quot;</bucket>
              <bucket>&quot;ESCA&quot;</bucket>
              <bucket>&quot;EXPL&quot;</bucket>
              <bucket>&quot;F&quot;</bucket>
              <bucket>&quot;FB&quot;</bucket>
              <bucket>&quot;FEDE&quot;</bucket>
              <bucket>&quot;FIAT&quot;</bucket>
              <bucket>&quot;FIVE&quot;</bucket>
              <bucket>&quot;FLAT&quot;</bucket>
              <bucket>&quot;FLEE&quot;</bucket>
              <bucket>&quot;FLTB&quot;</bucket>
              <bucket>&quot;FODO&quot;</bucket>
              <bucket>&quot;FORD&quot;</bucket>
              <bucket>&quot;FORU&quot;</bucket>
              <bucket>&quot;FOUR&quot;</bucket>
              <bucket>&quot;FPM&quot;</bucket>
              <bucket>&quot;FR&quot;</bucket>
              <bucket>&quot;FRED&quot;</bucket>
              <bucket>&quot;FREG&quot;</bucket>
              <bucket>&quot;FREI&quot;</bucket>
              <bucket>&quot;FRER&quot;</bucket>
              <bucket>&quot;FRG&quot;</bucket>
              <bucket>&quot;FRHT&quot;</bucket>
              <bucket>&quot;FRIE&quot;</bucket>
              <bucket>&quot;FRIG&quot;</bucket>
              <bucket>&quot;FRLI&quot;</bucket>
              <bucket>&quot;FRON&quot;</bucket>
              <bucket>&quot;FRWE&quot;</bucket>
              <bucket>&quot;FUTR&quot;</bucket>
              <bucket>&quot;GA&quot;</bucket>
              <bucket>&quot;GLE&quot;</bucket>
              <bucket>&quot;GM&quot;</bucket>
              <bucket>&quot;GMC&quot;</bucket>
              <bucket>&quot;GOBU&quot;</bucket>
              <bucket>&quot;GOU&quot;</bucket>
              <bucket>&quot;GOV&quot;</bucket>
              <bucket>&quot;GREE&quot;</bucket>
              <bucket>&quot;GTY&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>&quot;H/IN&quot;</bucket>
              <bucket>&quot;H/TR&quot;</bucket>
              <bucket>&quot;H/WH&quot;</bucket>
              <bucket>&quot;HARH&quot;</bucket>
              <bucket>&quot;HATC&quot;</bucket>
              <bucket>&quot;HB&quot;</bucket>
              <bucket>&quot;HD&quot;</bucket>
              <bucket>&quot;HINO&quot;</bucket>
              <bucket>&quot;HOND&quot;</bucket>
              <bucket>&quot;HOPR&quot;</bucket>
              <bucket>&quot;HRSE&quot;</bucket>
              <bucket>&quot;HSLN&quot;</bucket>
              <bucket>&quot;HUMM&quot;</bucket>
              <bucket>&quot;HW&quot;</bucket>
              <bucket>&quot;HWH&quot;</bucket>
              <bucket>&quot;I&quot;</bucket>
              <bucket>&quot;IAN&quot;</bucket>
              <bucket>&quot;IANN&quot;</bucket>
              <bucket>&quot;ICMB&quot;</bucket>
              <bucket>&quot;II&quot;</bucket>
              <bucket>&quot;III&quot;</bucket>
              <bucket>&quot;IIIN&quot;</bucket>
              <bucket>&quot;IIN&quot;</bucket>
              <bucket>&quot;IINN&quot;</bucket>
              <bucket>&quot;IJIC&quot;</bucket>
              <bucket>&quot;IKPV&quot;</bucket>
              <bucket>&quot;ILLS&quot;</bucket>
              <bucket>&quot;ILN&quot;</bucket>
              <bucket>&quot;ILR&quot;</bucket>
              <bucket>&quot;IN&quot;</bucket>
              <bucket>&quot;INTE&quot;</bucket>
              <bucket>&quot;INTL&quot;</bucket>
              <bucket>&quot;INTR&quot;</bucket>
              <bucket>&quot;IR&quot;</bucket>
              <bucket>&quot;IRP&quot;</bucket>
              <bucket>&quot;IS&quot;</bucket>
              <bucket>&quot;ISLL&quot;</bucket>
              <bucket>&quot;ISR&quot;</bucket>
              <bucket>&quot;ISUZ&quot;</bucket>
              <bucket>&quot;ITIL&quot;</bucket>
              <bucket>&quot;IVIS&quot;</bucket>
              <bucket>&quot;IVL&quot;</bucket>
              <bucket>&quot;JEEP&quot;</bucket>
              <bucket>&quot;JK&quot;</bucket>
              <bucket>&quot;JP&quot;</bucket>
              <bucket>&quot;JRLL&quot;</bucket>
              <bucket>&quot;KEAR&quot;</bucket>
              <bucket>&quot;KERE&quot;</bucket>
              <bucket>&quot;KIA&quot;</bucket>
              <bucket>&quot;L&quot;</bucket>
              <bucket>&quot;LA&quot;</bucket>
              <bucket>&quot;LACO&quot;</bucket>
              <bucket>&quot;LB&quot;</bucket>
              <bucket>&quot;LGM&quot;</bucket>
              <bucket>&quot;LGTR&quot;</bucket>
              <bucket>&quot;LIFT&quot;</bucket>
              <bucket>&quot;LIM&quot;</bucket>
              <bucket>&quot;LIME&quot;</bucket>
              <bucket>&quot;LIMO&quot;</bucket>
              <bucket>&quot;LINC&quot;</bucket>
              <bucket>&quot;LIRR&quot;</bucket>
              <bucket>&quot;LIVE&quot;</bucket>
              <bucket>&quot;LL&quot;</bucket>
              <bucket>&quot;LLM&quot;</bucket>
              <bucket>&quot;LMA&quot;</bucket>
              <bucket>&quot;LONV&quot;</bucket>
              <bucket>&quot;LTPI&quot;</bucket>
              <bucket>&quot;LTRL&quot;</bucket>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;MACK&quot;</bucket>
              <bucket>&quot;MAST&quot;</bucket>
              <bucket>&quot;MAZD&quot;</bucket>
              <bucket>&quot;MC&quot;</bucket>
              <bucket>&quot;MCC&quot;</bucket>
              <bucket>&quot;MCFE&quot;</bucket>
              <bucket>&quot;MCT&quot;</bucket>
              <bucket>&quot;MCY&quot;</bucket>
              <bucket>&quot;MCYC&quot;</bucket>
              <bucket>&quot;MCYM&quot;</bucket>
              <bucket>&quot;ME&quot;</bucket>
              <bucket>&quot;MH&quot;</bucket>
              <bucket>&quot;MI&quot;</bucket>
              <bucket>&quot;MIC&quot;</bucket>
              <bucket>&quot;MILF&quot;</bucket>
              <bucket>&quot;MINI&quot;</bucket>
              <bucket>&quot;ML&quot;</bucket>
              <bucket>&quot;MLCY&quot;</bucket>
              <bucket>&quot;MLIC&quot;</bucket>
              <bucket>&quot;MOBL&quot;</bucket>
              <bucket>&quot;MONT&quot;</bucket>
              <bucket>&quot;MOPD&quot;</bucket>
              <bucket>&quot;MOPE&quot;</bucket>
              <bucket>&quot;MORT&quot;</bucket>
              <bucket>&quot;MOT&quot;</bucket>
              <bucket>&quot;MOTC&quot;</bucket>
              <bucket>&quot;MOTE&quot;</bucket>
              <bucket>&quot;MOTO&quot;</bucket>
              <bucket>&quot;MOTR&quot;</bucket>
              <bucket>&quot;MOTV&quot;</bucket>
              <bucket>&quot;MOVI&quot;</bucket>
              <bucket>&quot;MP&quot;</bucket>
              <bucket>&quot;MPTO&quot;</bucket>
              <bucket>&quot;MT&quot;</bucket>
              <bucket>&quot;MTC&quot;</bucket>
              <bucket>&quot;MTR&quot;</bucket>
              <bucket>&quot;MYC&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;NHL&quot;</bucket>
              <bucket>&quot;NI&quot;</bucket>
              <bucket>&quot;NIS&quot;</bucket>
              <bucket>&quot;NISU&quot;</bucket>
              <bucket>&quot;NL&quot;</bucket>
              <bucket>&quot;NLC&quot;</bucket>
              <bucket>&quot;NM&quot;</bucket>
              <bucket>&quot;NMZF&quot;</bucket>
              <bucket>&quot;NNJ&quot;</bucket>
              <bucket>&quot;NR&quot;</bucket>
              <bucket>&quot;NS&quot;</bucket>
              <bucket>&quot;NSIL&quot;</bucket>
              <bucket>&quot;NSR&quot;</bucket>
              <bucket>&quot;NTTR&quot;</bucket>
              <bucket>&quot;OHIO&quot;</bucket>
              <bucket>&quot;OML&quot;</bucket>
              <bucket>&quot;OMMI&quot;</bucket>
              <bucket>&quot;OMNI&quot;</bucket>
              <bucket>&quot;OMR&quot;</bucket>
              <bucket>&quot;OMRB&quot;</bucket>
              <bucket>&quot;OMT&quot;</bucket>
              <bucket>&quot;ON&quot;</bucket>
              <bucket>&quot;OUCJ&quot;</bucket>
              <bucket>&quot;OUTA&quot;</bucket>
              <bucket>&quot;P&quot;</bucket>
              <bucket>&quot;P-U&quot;</bucket>
              <bucket>&quot;P/SH&quot;</bucket>
              <bucket>&quot;P/U&quot;</bucket>
              <bucket>&quot;PAS&quot;</bucket>
              <bucket>&quot;PASS&quot;</bucket>
              <bucket>&quot;PATH&quot;</bucket>
              <bucket>&quot;PCK&quot;</bucket>
              <bucket>&quot;PEDI&quot;</bucket>
              <bucket>&quot;PENS&quot;</bucket>
              <bucket>&quot;PERM&quot;</bucket>
              <bucket>&quot;PETE&quot;</bucket>
              <bucket>&quot;PIC&quot;</bucket>
              <bucket>&quot;PICK&quot;</bucket>
              <bucket>&quot;PICL&quot;</bucket>
              <bucket>&quot;PICS&quot;</bucket>
              <bucket>&quot;PK&quot;</bucket>
              <bucket>&quot;PKUP&quot;</bucket>
              <bucket>&quot;PLAT&quot;</bucket>
              <bucket>&quot;PLIM&quot;</bucket>
              <bucket>&quot;PLU&quot;</bucket>
              <bucket>&quot;PLYM&quot;</bucket>
              <bucket>&quot;POLE&quot;</bucket>
              <bucket>&quot;POUS&quot;</bucket>
              <bucket>&quot;PRIU&quot;</bucket>
              <bucket>&quot;PS&quot;</bucket>
              <bucket>&quot;PSD&quot;</bucket>
              <bucket>&quot;PSVA&quot;</bucket>
              <bucket>&quot;PU&quot;</bucket>
              <bucket>&quot;PUMP&quot;</bucket>
              <bucket>&quot;Q&quot;</bucket>
              <bucket>&quot;R&quot;</bucket>
              <bucket>&quot;R/RD&quot;</bucket>
              <bucket>&quot;RANG&quot;</bucket>
              <bucket>&quot;RBM&quot;</bucket>
              <bucket>&quot;RD&quot;</bucket>
              <bucket>&quot;RD/S&quot;</bucket>
              <bucket>&quot;RDST&quot;</bucket>
              <bucket>&quot;REBI&quot;</bucket>
              <bucket>&quot;RED&quot;</bucket>
              <bucket>&quot;REDY&quot;</bucket>
              <bucket>&quot;REF&quot;</bucket>
              <bucket>&quot;REFA&quot;</bucket>
              <bucket>&quot;REFE&quot;</bucket>
              <bucket>&quot;REFG&quot;</bucket>
              <bucket>&quot;REFI&quot;</bucket>
              <bucket>&quot;REFJ&quot;</bucket>
              <bucket>&quot;REFR&quot;</bucket>
              <bucket>&quot;REFS&quot;</bucket>
              <bucket>&quot;REG&quot;</bucket>
              <bucket>&quot;RENT&quot;</bucket>
              <bucket>&quot;RER&quot;</bucket>
              <bucket>&quot;RERF&quot;</bucket>
              <bucket>&quot;REUC&quot;</bucket>
              <bucket>&quot;RF&quot;</bucket>
              <bucket>&quot;RGG&quot;</bucket>
              <bucket>&quot;RH&quot;</bucket>
              <bucket>&quot;RI&quot;</bucket>
              <bucket>&quot;RIGG&quot;</bucket>
              <bucket>&quot;RL&quot;</bucket>
              <bucket>&quot;RLL&quot;</bucket>
              <bucket>&quot;RLN&quot;</bucket>
              <bucket>&quot;RLY&quot;</bucket>
              <bucket>&quot;RODE&quot;</bucket>
              <bucket>&quot;ROLL&quot;</bucket>
              <bucket>&quot;RPLC&quot;</bucket>
              <bucket>&quot;RRM&quot;</bucket>
              <bucket>&quot;RRTN&quot;</bucket>
              <bucket>&quot;RS&quot;</bucket>
              <bucket>&quot;RYDE&quot;</bucket>
              <bucket>&quot;S&quot;</bucket>
              <bucket>&quot;S/SP&quot;</bucket>
              <bucket>&quot;SABL&quot;</bucket>
              <bucket>&quot;SAT&quot;</bucket>
              <bucket>&quot;SAVA&quot;</bucket>
              <bucket>&quot;SCEN&quot;</bucket>
              <bucket>&quot;SCHO&quot;</bucket>
              <bucket>&quot;SCL&quot;</bucket>
              <bucket>&quot;SCOO&quot;</bucket>
              <bucket>&quot;SCOT&quot;</bucket>
              <bucket>&quot;SCRM&quot;</bucket>
              <bucket>&quot;SD&quot;</bucket>
              <bucket>&quot;SDA&quot;</bucket>
              <bucket>&quot;SDN&quot;</bucket>
              <bucket>&quot;SE&quot;</bucket>
              <bucket>&quot;SEAC&quot;</bucket>
              <bucket>&quot;SEDA&quot;</bucket>
              <bucket>&quot;SEDN&quot;</bucket>
              <bucket>&quot;SEIT&quot;</bucket>
              <bucket>&quot;SEM&quot;</bucket>
              <bucket>&quot;SEMG&quot;</bucket>
              <bucket>&quot;SEMI&quot;</bucket>
              <bucket>&quot;SEMR&quot;</bucket>
              <bucket>&quot;SEMT&quot;</bucket>
              <bucket>&quot;SEMY&quot;</bucket>
              <bucket>&quot;SEN&quot;</bucket>
              <bucket>&quot;SERN&quot;</bucket>
              <bucket>&quot;SI&quot;</bucket>
              <bucket>&quot;SIIC&quot;</bucket>
              <bucket>&quot;SILV&quot;</bucket>
              <bucket>&quot;SING&quot;</bucket>
              <bucket>&quot;SIXS&quot;</bucket>
              <bucket>&quot;SL&quot;</bucket>
              <bucket>&quot;SLRS&quot;</bucket>
              <bucket>&quot;SMAR&quot;</bucket>
              <bucket>&quot;SMC&quot;</bucket>
              <bucket>&quot;SMLR&quot;</bucket>
              <bucket>&quot;SN/P&quot;</bucket>
              <bucket>&quot;SNNL&quot;</bucket>
              <bucket>&quot;SON&quot;</bucket>
              <bucket>&quot;SOUT&quot;</bucket>
              <bucket>&quot;SP&quot;</bucket>
              <bucket>&quot;SPIN&quot;</bucket>
              <bucket>&quot;SRF&quot;</bucket>
              <bucket>&quot;SSS&quot;</bucket>
              <bucket>&quot;ST W&quot;</bucket>
              <bucket>&quot;STAI&quot;</bucket>
              <bucket>&quot;STAK&quot;</bucket>
              <bucket>&quot;STAR&quot;</bucket>
              <bucket>&quot;STAT&quot;</bucket>
              <bucket>&quot;STAW&quot;</bucket>
              <bucket>&quot;STEP&quot;</bucket>
              <bucket>&quot;STNW&quot;</bucket>
              <bucket>&quot;STWA&quot;</bucket>
              <bucket>&quot;SU&quot;</bucket>
              <bucket>&quot;SUBA&quot;</bucket>
              <bucket>&quot;SUBN&quot;</bucket>
              <bucket>&quot;SUBU&quot;</bucket>
              <bucket>&quot;SUV&quot;</bucket>
              <bucket>&quot;SUVY&quot;</bucket>
              <bucket>&quot;SUZU&quot;</bucket>
              <bucket>&quot;SV&quot;</bucket>
              <bucket>&quot;SVU&quot;</bucket>
              <bucket>&quot;SVY&quot;</bucket>
              <bucket>&quot;SW&quot;</bucket>
              <bucket>&quot;SWT&quot;</bucket>
              <bucket>&quot;SY&quot;</bucket>
              <bucket>&quot;T&quot;</bucket>
              <bucket>&quot;T/CR&quot;</bucket>
              <bucket>&quot;TACI&quot;</bucket>
              <bucket>&quot;TACT&quot;</bucket>
              <bucket>&quot;TAHO&quot;</bucket>
              <bucket>&quot;TAK&quot;</bucket>
              <bucket>&quot;TANK&quot;</bucket>
              <bucket>&quot;TARC&quot;</bucket>
              <bucket>&quot;TAXI&quot;</bucket>
              <bucket>&quot;TE&quot;</bucket>
              <bucket>&quot;TEMP&quot;</bucket>
              <bucket>&quot;TEOD&quot;</bucket>
              <bucket>&quot;TF&quot;</bucket>
              <bucket>&quot;TFUC&quot;</bucket>
              <bucket>&quot;TGNI&quot;</bucket>
              <bucket>&quot;TH&quot;</bucket>
              <bucket>&quot;TI&quot;</bucket>
              <bucket>&quot;TIAU&quot;</bucket>
              <bucket>&quot;TINS&quot;</bucket>
              <bucket>&quot;TIZU&quot;</bucket>
              <bucket>&quot;TJ&quot;</bucket>
              <bucket>&quot;TK&quot;</bucket>
              <bucket>&quot;TKRT&quot;</bucket>
              <bucket>&quot;TKTR&quot;</bucket>
              <bucket>&quot;TL&quot;</bucket>
              <bucket>&quot;TLC&quot;</bucket>
              <bucket>&quot;TLR&quot;</bucket>
              <bucket>&quot;TLRL&quot;</bucket>
              <bucket>&quot;TMST&quot;</bucket>
              <bucket>&quot;TN&quot;</bucket>
              <bucket>&quot;TNAC&quot;</bucket>
              <bucket>&quot;TNC&quot;</bucket>
              <bucket>&quot;TOW&quot;</bucket>
              <bucket>&quot;TOWD&quot;</bucket>
              <bucket>&quot;TOWN&quot;</bucket>
              <bucket>&quot;TOWT&quot;</bucket>
              <bucket>&quot;TOYO&quot;</bucket>
              <bucket>&quot;TR&quot;</bucket>
              <bucket>&quot;TR/C&quot;</bucket>
              <bucket>&quot;TR/E&quot;</bucket>
              <bucket>&quot;TRA&quot;</bucket>
              <bucket>&quot;TRAC&quot;</bucket>
              <bucket>&quot;TRAI&quot;</bucket>
              <bucket>&quot;TRAK&quot;</bucket>
              <bucket>&quot;TRAL&quot;</bucket>
              <bucket>&quot;TRAN&quot;</bucket>
              <bucket>&quot;TRAU&quot;</bucket>
              <bucket>&quot;TRAV&quot;</bucket>
              <bucket>&quot;TRC&quot;</bucket>
              <bucket>&quot;TRCK&quot;</bucket>
              <bucket>&quot;TRCT&quot;</bucket>
              <bucket>&quot;TRIC&quot;</bucket>
              <bucket>&quot;TRIK&quot;</bucket>
              <bucket>&quot;TRIL&quot;</bucket>
              <bucket>&quot;TRK&quot;</bucket>
              <bucket>&quot;TRL&quot;</bucket>
              <bucket>&quot;TRLE&quot;</bucket>
              <bucket>&quot;TRLR&quot;</bucket>
              <bucket>&quot;TROC&quot;</bucket>
              <bucket>&quot;TRSI&quot;</bucket>
              <bucket>&quot;TRT&quot;</bucket>
              <bucket>&quot;TRTR&quot;</bucket>
              <bucket>&quot;TRUC&quot;</bucket>
              <bucket>&quot;TRUK&quot;</bucket>
              <bucket>&quot;TT&quot;</bucket>
              <bucket>&quot;TTK&quot;</bucket>
              <bucket>&quot;TW&quot;</bucket>
              <bucket>&quot;TWOD&quot;</bucket>
              <bucket>&quot;TWOW&quot;</bucket>
              <bucket>&quot;TX&quot;</bucket>
              <bucket>&quot;UD&quot;</bucket>
              <bucket>&quot;UDRE&quot;</bucket>
              <bucket>&quot;UH&quot;</bucket>
              <bucket>&quot;UHAL&quot;</bucket>
              <bucket>&quot;UHAU&quot;</bucket>
              <bucket>&quot;ULT&quot;</bucket>
              <bucket>&quot;UMO&quot;</bucket>
              <bucket>&quot;UNC&quot;</bucket>
              <bucket>&quot;UNI&quot;</bucket>
              <bucket>&quot;UNK&quot;</bucket>
              <bucket>&quot;UNTI&quot;</bucket>
              <bucket>&quot;UPS&quot;</bucket>
              <bucket>&quot;URS&quot;</bucket>
              <bucket>&quot;UT&quot;</bucket>
              <bucket>&quot;UTI&quot;</bucket>
              <bucket>&quot;UTIC&quot;</bucket>
              <bucket>&quot;UTIL&quot;</bucket>
              <bucket>&quot;UTIT&quot;</bucket>
              <bucket>&quot;UTL&quot;</bucket>
              <bucket>&quot;UTLI&quot;</bucket>
              <bucket>&quot;UTR&quot;</bucket>
              <bucket>&quot;VA&quot;</bucket>
              <bucket>&quot;VAN&quot;</bucket>
              <bucket>&quot;VANT&quot;</bucket>
              <bucket>&quot;VC&quot;</bucket>
              <bucket>&quot;VEHR&quot;</bucket>
              <bucket>&quot;VESP&quot;</bucket>
              <bucket>&quot;VLEK&quot;</bucket>
              <bucket>&quot;VN&quot;</bucket>
              <bucket>&quot;VOLK&quot;</bucket>
              <bucket>&quot;VON&quot;</bucket>
              <bucket>&quot;VSRS&quot;</bucket>
              <bucket>&quot;W&quot;</bucket>
              <bucket>&quot;W/DR&quot;</bucket>
              <bucket>&quot;WAG&quot;</bucket>
              <bucket>&quot;WAGO&quot;</bucket>
              <bucket>&quot;WASH&quot;</bucket>
              <bucket>&quot;WASO&quot;</bucket>
              <bucket>&quot;WG&quot;</bucket>
              <bucket>&quot;WGN&quot;</bucket>
              <bucket>&quot;WH&quot;</bucket>
              <bucket>&quot;WHIT&quot;</bucket>
              <bucket>&quot;WINN&quot;</bucket>
              <bucket>&quot;WORK&quot;</bucket>
              <bucket>&quot;WRAN&quot;</bucket>
              <bucket>&quot;WSR&quot;</bucket>
              <bucket>&quot;WTRU&quot;</bucket>
              <bucket>&quot;WW&quot;</bucket>
              <bucket>&quot;Y&quot;</bucket>
              <bucket>&quot;YDSD&quot;</bucket>
              <bucket>&quot;YOSD&quot;</bucket>
              <bucket>&quot;YTAC&quot;</bucket>
              <bucket>&quot;YY&quot;</bucket>
              <bucket>&quot;Z&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Violation Time:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Violation Time:nk]' />
              <groupfilter from='&quot;09+4&quot;' function='range' level='[none:Violation Time:nk]' to='&quot;9843&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Violation Time:nk]</column>
            <column>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Exclusions (State,Vehicle Body Type)]</column>
            <column>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Vehicle Body Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Longitude (generated)]' field-type='quantitative' max='-7328050.6629043175' min='-9251512.0426724907' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Latitude (generated)]' field-type='quantitative' max='5530954.7607876807' min='4420477.6138606388' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:State:nk]' />
              <size column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[cnt:State:qk]' />
              <color column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Vehicle Body Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='14.547999382019043' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Latitude (generated)]</rows>
        <cols>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Color per state'>
      <table>
        <view>
          <datasources>
            <datasource caption='parkingAltered' name='federated.0zopczd02d3z9a19ye0u60ifz2gl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zopczd02d3z9a19ye0u60ifz2gl'>
            <column datatype='string' name='[Color]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Vehicle Body Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Violation Time]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='Count' name='[cnt:State:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Color]' derivation='None' name='[none:Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vehicle Body Type]' derivation='None' name='[none:Vehicle Body Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Violation Time]' derivation='None' name='[none:Violation Time:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Exclusions (State,Vehicle Body Type)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State:nk]' />
                <groupfilter function='level-members' level='[none:Vehicle Body Type:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                <groupfilter function='member' level='[none:Vehicle Body Type:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;WHITE&quot;</bucket>
              <bucket>&quot;GREY&quot;</bucket>
              <bucket>&quot;BLACK&quot;</bucket>
              <bucket>&quot;BLUE&quot;</bucket>
              <bucket>&quot;RED&quot;</bucket>
              <bucket>&quot;BROWN&quot;</bucket>
              <bucket>&quot;GREEN&quot;</bucket>
              <bucket>&quot;YELLOW&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Vehicle Body Type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Vehicle Body Type:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Vehicle Body Type:nk]' member='%null%' />
                <groupfilter from='&quot;2 DR&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;2DHT&quot;' />
                <groupfilter from='&quot;2DSE&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;4DRS&quot;' />
                <groupfilter from='&quot;4DSE&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;DELI&quot;' />
                <groupfilter from='&quot;DEMA&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;PIC&quot;' />
                <groupfilter from='&quot;PICL&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;SDA&quot;' />
                <groupfilter from='&quot;SE&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;SUBA&quot;' />
                <groupfilter from='&quot;SUBU&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;VA&quot;' />
                <groupfilter from='&quot;VANT&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;Z&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Violation Time:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Violation Time:nk]' />
              <groupfilter from='&quot;09+4&quot;' function='range' level='[none:Violation Time:nk]' to='&quot;9843&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Violation Time:nk]</column>
            <column>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Exclusions (State,Vehicle Body Type)]</column>
            <column>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Vehicle Body Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Longitude (generated)]' field-type='quantitative' max='-7477027.1793568991' min='-8835771.7941541933' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Latitude (generated)]' field-type='quantitative' max='5511690.3052589558' min='4727752.1431661891' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:State:nk]' />
              <size column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[cnt:State:qk]' />
              <color column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Color:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='14.547999382019043' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Latitude (generated)]</rows>
        <cols>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Color/VCcode'>
      <table>
        <view>
          <datasources>
            <datasource caption='parkingAltered' name='federated.0zopczd02d3z9a19ye0u60ifz2gl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zopczd02d3z9a19ye0u60ifz2gl'>
            <column datatype='string' name='[Color]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Vehicle Body Type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Viol Code' datatype='integer' name='[ViolCode]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Violation Time]' role='dimension' type='nominal' />
            <column-instance column='[ViolCode]' derivation='Count' name='[cnt:ViolCode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Color]' derivation='None' name='[none:Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vehicle Body Type]' derivation='None' name='[none:Vehicle Body Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[ViolCode]' derivation='None' name='[none:ViolCode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Violation Time]' derivation='None' name='[none:Violation Time:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Exclusions (State,Vehicle Body Type)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State:nk]' />
                <groupfilter function='level-members' level='[none:Vehicle Body Type:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                <groupfilter function='member' level='[none:Vehicle Body Type:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;WHITE&quot;</bucket>
              <bucket>&quot;GREY&quot;</bucket>
              <bucket>&quot;BLACK&quot;</bucket>
              <bucket>&quot;BLUE&quot;</bucket>
              <bucket>&quot;RED&quot;</bucket>
              <bucket>&quot;BROWN&quot;</bucket>
              <bucket>&quot;GREEN&quot;</bucket>
              <bucket>&quot;YELLOW&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Vehicle Body Type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Vehicle Body Type:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Vehicle Body Type:nk]' member='%null%' />
                <groupfilter from='&quot;2 DR&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;2DHT&quot;' />
                <groupfilter from='&quot;2DSE&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;4DRS&quot;' />
                <groupfilter from='&quot;4DSE&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;DELI&quot;' />
                <groupfilter from='&quot;DEMA&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;PIC&quot;' />
                <groupfilter from='&quot;PICL&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;SDA&quot;' />
                <groupfilter from='&quot;SE&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;SUBA&quot;' />
                <groupfilter from='&quot;SUBU&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;VA&quot;' />
                <groupfilter from='&quot;VANT&quot;' function='range' level='[none:Vehicle Body Type:nk]' to='&quot;Z&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Violation Time:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Violation Time:nk]' />
              <groupfilter from='&quot;09+4&quot;' function='range' level='[none:Violation Time:nk]' to='&quot;9843&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Violation Time:nk]</column>
            <column>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[Exclusions (State,Vehicle Body Type)]</column>
            <column>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Vehicle Body Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[cnt:ViolCode:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[cnt:ViolCode:qk]' />
              <text column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:ViolCode:ok]' />
              <color column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Color:nk]' />
              <text column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Violation Time:nk]' />
              <lod column='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Car Makes per state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[cnt:State:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Vehicle Body Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Calculation_1044272167191433216:qk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Calculation_1044272167192469505:qk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Make:nk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Vehicle Body Type:nk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:ViolCode:ok]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Violation Time:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Color per state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[cnt:State:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Color:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Calculation_1044272167191433216:qk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Calculation_1044272167192469505:qk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Color:nk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Make:nk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Vehicle Body Type:nk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:ViolCode:ok]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Violation Time:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Color/VCcode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Color:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[cnt:State:qk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Calculation_1044272167191433216:qk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Calculation_1044272167192469505:qk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Color:nk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Make:nk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:State:nk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Vehicle Body Type:nk]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:ViolCode:ok]</field>
            <field>[federated.0zopczd02d3z9a19ye0u60ifz2gl].[none:Violation Time:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Car Makes per state' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Color per state' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Color/VCcode' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
